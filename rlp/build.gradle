plugins {
    id 'com.android.library'
    id 'maven-publish'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = group
            artifactId = project.name
            version = version

            artifact("$buildDir/outputs/aar/${project.name}-release.aar")

            pom {
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.api.allDependencies.each { dependency ->
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}

android {
    namespace 'org.web3j.rlp'
    compileSdkVersion 34

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 34
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
        test {
            java.srcDirs = ['src/test/java']
        }
    }
}

description 'Ethereum Recursive Length Prefix (RLP) encoding for serializing objects'

dependencies {
    api project(':utils')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

//tasks.named("spotlessJava").configure {
//    dependsOn("spotlessGroovyGradle", "compileDebugJavaWithJavac", "compileReleaseJavaWithJavac", "javadoc", "test", "jacocoTestReport")
//}
//
//tasks.named("spotlessKotlin").configure {
//    dependsOn("compileDebugKotlin", "compileReleaseKotlin", "spotlessJava", "spotlessGroovyGradle", "processTestResources", "test", "jacocoTestReport")
//}
